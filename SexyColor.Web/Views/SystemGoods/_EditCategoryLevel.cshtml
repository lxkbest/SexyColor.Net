@model CategoryLevelModel
@{
    Layout = null;
}
<style>
    textarea {
        margin: 0px -9.25px 0px 0px;
        width: 370px;
        height: 120px;
    }

    .show_img {
        height: 70px;
        width: auto;
    }
    #jsParentBox{
        display:none;
    }
</style>
<div>
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            <h4 class="modal-title">@ViewBag.SubjectTitle</h4>
        </div>
        <div class="modal-body">
            <form id="myForm" asp-action="EditCategoryLevelAsync" asp-controller="SystemGoods" enctype="multipart/form-data" class="form-horizontal center-block" style="width:75%;">
                @Html.HiddenFor(w => w.CategoryId)
                @Html.HiddenFor(w => w.LevelNumber)
                @Html.HiddenFor(w => w.ImageUrl)

                @Html.Hidden("isUpdate", "", new {@id="jsSubmitType"})

                <div class="form-group">
                    <label for="inputEmail3" class="col-xs-3 control-label">名称：</label>
                    <div class="col-xs-4">
                        @Html.TextBoxFor(w => w.CategoryName, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="col-xs-3 control-label">描述：</label>
                    <div class="col-xs-7">
                        @Html.TextAreaFor(w => w.Description, new { @class = "form-control" })
                    </div>
                </div>
                <div id="levelCheck" class="form-group">
                    <label for="inputEmail3" class="col-xs-3 control-label">是否是一级分类：</label>
                    <div class="col-xs-7">
                        <input id="level1Check" class="flat hide" checked="checked" type="checkbox">
                    </div>
                </div>
                <div id="jsParentBox" class="form-group">
                    <label for="inputEmail3" class="col-xs-3 control-label">所属父级：</label>
                    <div class="col-xs-7">
                        @Html.TextBoxFor(w => w.ParentCategoryName, new { @Class = "form-control", @id = "jsTreeEditText" })
                        @Html.HiddenFor(w => w.ParentCategoryId, new { @id = "jsTreeEditValue" })
                        <ul id="jsTreeEditSelect" class="ztree custom_ztree"></ul>
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="col-xs-3 control-label">图片：</label>
                    <div class="col-xs-4">
                        <img id="jsPreImg" class="show_img" src="@Model.ImageUrl" />
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="col-xs-3 control-label">选择图片：</label>
                    <div class="col-xs-4">
                        <label id="jsImgBtn" for="imgUpload" class="btn btn-sm btn-info file_upload"><i class="fa fa-image"></i> 选择图片</label>
                        <input id="imgUpload" name="files" type="file" style="display:none;" mulpitle="">
                    </div>
                </div>
                <div class="clearfix"></div>
            </form>
            <div class="clearfix"></div>
            <div class="modal-footer">
                <button type="submit" form="myForm" class="btn btn-primary">保 存</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">关 闭</button>
            </div>
        </div>
    </div>
</div>

<script>
    //全局变量
    G_$preImg = $("#jsPreImg");

    $("#imgUpload").change(function () {
        imagePreview(this, G_$preImg[0]);
    });

    function success(data) {
        if (data.messageType == 1) {
            $('#ajaxDialog').modal('hide');
            swal({
                title: '操作成功！',
                timer: 1500,
                showConfirmButton: false,
                type: 'success'
            });
            location.reload();
        }
    }

    function error(data) {
        $('#ajaxDialog').modal('hide');
        swal({
            title: '操作失败！',
            timer: 1500,
            showConfirmButton: false,
            type: 'error'
        });
    }

    //全局变量
    var G_$treeText = $("#jsTreeEditText"),
        G_$ztreeUl = $("#jsTreeEditSelect"),
        G_$treeVlaue = $("#jsTreeEditValue");
    //jquery ready
    $(function () {
        var setting = {
            async: {
                enable: true,
                url: "@NavigationUrls.Instance().JsonCategory()",
                autoParam: ["id=itemKey"],
                otherParam: { "otherParam": "zTreeAsyncTest" },
                dataFilter: filter
            },
            callback: {
                onClick:clickNode
            }
        };
        //单击节点事件
        function clickNode(event, treeId, treeNode) {
            G_$treeText.val(treeNode.name).blur();
            G_$treeVlaue.val(treeNode.id);
            G_$ztreeUl.hide();
        }

        //树节点过滤器
        function filter(treeId, parentNode, childNodes) {
            if (!childNodes) return null;
            return childNodes;
        }
        $.fn.zTree.init(G_$ztreeUl, setting);

        //显示ztree
        G_$treeText.click(function () {
            G_$ztreeUl.show();
        });

        var G_$MyForm = $("#myForm");

        G_$MyForm.submit(function (e) {
            e.preventDefault();
            var url = $(this).attr("action"),
                type = $(this).data("type"),
                $typeHide = $("#jsSubmitType");
            if (type == "add") {
                $typeHide.val(false);
            } else if (type == "edit"){
                $typeHide.val(true);
            }
            var dataForm = new FormData(this);

            $.ajax({
                method: "POST",
                url: url,
                data: dataForm,
                processData: false,
                contentType: false,
                success: function (data) {
                    var msg = data.messageContent;
                    if (data.messageType === 1) {
                        swal({ title: msg, timer: 1500, showConfirmButton: false, type: 'success' });
                        location.reload();
                    } else {
                        swal({ title: msg, timer: 1500, showConfirmButton: false, type: 'warning' });
                    }

                },
                error: function () {
                    swal({ title: "系统异常！", timer: 1500, showConfirmButton: false, type: 'error' });
                }
            });
            return false;
        });

    });

    $('#level1Check').on('ifChanged', function (event) {
        var box = $("#jsParentBox");
        if (this.checked) {
            box.hide();
            $("#LevelNumber").val(@((int)CategoryLevel.Level1));
        } else {
            box.show();
            $("#LevelNumber").val(@((int)CategoryLevel.Level2));
        }
    });

    /*初始化icheck*/
    $('input.flat').iCheck({
        checkboxClass: 'icheckbox_flat-green',
        radioClass: 'iradio_flat-green'
    });
</script>