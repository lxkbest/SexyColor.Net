@model EditPermissionModel
@{
    Layout = null;
    ApplicationidEnum applicationEnum = (ApplicationidEnum)Enum.ToObject(typeof(ApplicationidEnum), Model.Applicationid);
    PermissionItemsType itemTypeEnum = (PermissionItemsType)Enum.ToObject(typeof(PermissionItemsType), Model.ItemType);
    IsEnableEnum enableEnum = (IsEnableEnum)Enum.ToObject(typeof(IsEnableEnum), Model.IsEnable);
    IsNewAtionEnum newActionEnum = (IsNewAtionEnum)Enum.ToObject(typeof(IsNewAtionEnum), Model.IsNewAction);
}
<div>
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            <h4 class="modal-title">编辑权限</h4>
        </div>
        <div class="modal-body">
            @using (Html.BeginAjaxForm("EditPermission", "SystemPermissions", null, FormMethod.Post, new AjaxFormOptions { DataType = AjaxDataType.Json, OnErrorCallBack = "error", OnSuccessCallBack = "success" }, new { @id = "sumitForm", @class = "form-horizontal center-block permission_add_form", @style = "width:75 %;" }))
            {
                @Html.HiddenFor(w => w.Itemkey)
                @Html.HiddenFor(w => w.DateCreated)
                <div class="row">
                    <div class="form-group col-xs-12">
                        <label class="control-label col-xs-2">权限项Key：</label>
                        <div class="input_box col-xs-10">
                            <div class="">
                                @Html.TextBoxFor(w => w.Itemkey, new { @Class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(w => w.Itemkey)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-xs-6">
                        <label class="control-label col-xs-4">权限名称：</label>
                        <div class="input_box col-xs-8">
                            <div class="width_170">
                                @Html.TextBoxFor(w => w.Itemname, new { @Class = "form-control" })
                                @Html.ValidationMessageFor(w => w.Itemname)
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-xs-6">
                        <label class="control-label col-xs-4">所属父级：</label>
                        <div class="input_box col-xs-8">
                            <div class="width_170">
                                @Html.TextBoxFor(w => w.ParentsName, new { @Class = "form-control",@id="jsTreeEditText"})
                                @Html.HiddenFor(w => w.Parentsid, new{ @id= "jsTreeEditValue" })
                                @Html.ValidationMessageFor(w => w.ParentsName)
                                <ul id="jsTreeEditSelect" class="ztree custom_ztree"></ul>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-xs-12">
                        <label class="control-label col-xs-2">权限Url：</label>
                        <div class="input_box col-xs-10">
                            <div class="">
                                @Html.TextBox("ItemUrl", Model.ItemUrl.IsNullOrWhiteSpace() ? "/" : Model.ItemUrl, new { @Class = "form-control"})
                                @Html.ValidationMessageFor(w => w.ItemUrl)
                            </div>
                        </div>
                    </div>
                    
                </div>
                <div class="row">
                    <div class="form-group col-xs-6">
                        <label class="control-label col-xs-4">所属应用：</label>
                        <div class="input_box col-xs-8">
                            @Html.EnumDropDownListFor(w => w.Applicationid, applicationEnum, "请选择", "0", new { @class = "form-control" })
                            @Html.ValidationMessage("Applicationid")
                        </div>
                    </div>

                    <div class="form-group col-xs-6">
                        <label class="control-label col-xs-4">排序：</label>
                        <div class="input_box col-xs-8">
                            <div class="width_170">
                                @Html.TextBoxFor(w => w.DisplayOrder, new { @Class = "form-control"})
                                @Html.ValidationMessageFor(w => w.DisplayOrder)

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-xs-6">
                        <label class="control-label col-xs-4">事件名称：</label>
                        <div class="input_box col-xs-8">
                            @Html.TextBoxFor(w => w.EventName, new { @Class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group col-xs-6">
                        <label class="control-label col-xs-4">类型：</label>
                        <div class="input_box col-xs-8">
                            @Html.EnumDropDownListFor(w => w.ItemType, itemTypeEnum, "请选择", "0", new { @class = "form-control" })
                            @Html.ValidationMessageFor(w => w.ItemType)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-xs-6">
                        <label class="control-label col-xs-4">是否禁用：</label>
                        <div class="input_box col-xs-8">
                            <div class="width_170">
                                @Html.EnumDropDownListFor(w => w.IsEnable, enableEnum, "请选择", "-1", new { @class = "form-control" })
                                @Html.ValidationMessageFor(w => w.IsEnable)
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-xs-6">
                        <label class="control-label col-xs-4">是否新功能：</label>
                        <div class="input_box col-xs-8">
                            <div class="">
                                @Html.EnumDropDownListFor(w => w.IsNewAction, newActionEnum, "请选择", "-1", new { @class = "form-control" })
                                @Html.ValidationMessageFor(w => w.IsNewAction)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
            }
            <div class="clearfix"></div>
            <div class="modal-footer">
                <button type="submit" form="sumitForm" class="btn btn-primary">确 定</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">关 闭</button>
            </div>
        </div>
    </div>
</div>

<script>
    function success(data) {
        if (data.messageType == 1) {
            $('#ajaxDialog').modal('hide');
            swal({
                title: '操作成功！',
                timer: 1500,
                showConfirmButton: false,
                type: 'success'
            });
            location.reload();
        }
    }

    function error(data) {
        $('#ajaxDialog').modal('hide');
        swal({
            title: '操作失败！',
            timer: 1500,
            showConfirmButton: false,
            type: 'error'
        });
    }

    //全局变量
    var G_$treeText = $("#jsTreeEditText"),
        G_$ztreeUl = $("#jsTreeEditSelect"),
        G_$treeVlaue = $("#jsTreeEditValue");
    //jquery ready
    $(function () {

        //G_$treeText.val(G_$treeVlaue.val());

        var setting = {
            async: {
                enable: true,
                url: '@NavigationUrls.Instance().JsonPermission("0")',
                autoParam: ["id=itemKey"],
                otherParam: { "otherParam": "zTreeAsyncTest" },
                dataFilter: filter
            },
            callback: {
                onClick:clickNode
            }
        };
        //单机节点事件
        function clickNode(event, treeId, treeNode) {
            G_$treeText.val(treeNode.name).blur();
            G_$treeVlaue.val(treeNode.id);
            G_$ztreeUl.hide();
        }

        //树节点过滤器
        function filter(treeId, parentNode, childNodes) {
            if (!childNodes) return null;
            return childNodes;
        }
        $.fn.zTree.init(G_$ztreeUl, setting);

        //显示ztree
        G_$treeText.click(function () {
            G_$ztreeUl.show();
        });
    });
</script>